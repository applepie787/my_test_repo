import re

# 더 정교한 이메일 정규식 패턴
email_pattern = r'^[\w\.-]+@[\w\.-]+\.\w+$'
# ^: 문자열의 시작, [\w\.-]+: 하나 이상의 단어 문자, 마침표 또는 하이픈을 의미
# @: 이메일 주소의 구분 기호
# [\w\.-]+: 하나 이상의 단어 문자, 마침표 또는 하이픈을 의미
# \.: 마침표 (점)은 이메일 주소에서 필수
# \w+: 하나 이상의 단어 문자로 끝나야 함
# $: 문자열의 끝

# 샘플 이메일 주소
sample_emails = [
    'user@example.com',         # 유효한 이메일 주소
    'john.doe@gmail.com',       # 유효한 이메일 주소
    'contact@company.co.uk',   # 유효한 이메일 주소
    '12345@example.invalid',    # 유효한 이메일 주소
    'support@my-website.net',   # 유효한 이메일 주소
    'user@sub.domain.co',       # 유효한 이메일 주소
    'user123@host.com',         # 유효한 이메일 주소
    'invalid-email',            # 유효하지 않은 이메일 주소
    'name@.com',                # 유효하지 않은 이메일 주소
    '@domain.com',              # 유효하지 않은 이메일 주소
]

# 각각의 이메일 주소에 대해 패턴 검사를 수행합니다.
for email in sample_emails:
    if re.search(email_pattern, email):
        print(f"{email}는 유효한 이메일 주소입니다.")  # 이메일 주소가 유효함
    else:
        print(f"{email}는 유효하지 않은 이메일 주소입니다.")  # 이메일 주소가 유효하지 않음

# 주민등록번호를 검사할 정교한 정규식 패턴
jumin_pattern = r'^\d{6}-[1-2]\d{6}$'
# ^\d{6}: 연도(2자리), 월(2자리), 일(2자리)
# - : 구분 기호
# [1-2]: 뒷부분의 첫 자리는 1 또는 2
# \d{6}: 나머지 6자리는 숫자

# 샘플 주민등록번호
sample_jumin_numbers = [
    '900101-1234567',  # 유효한 주민등록번호
    '980512-2345678',  # 유효한 주민등록번호
    '021231-3456789',  # 유효한 주민등록번호
    '070705-2123456',  # 유효한 주민등록번호
    '110201-1122334',  # 유효한 주민등록번호
    '951234-1234567',  # 유효한 주민등록번호
    '040404-5555555',  # 유효한 주민등록번호
    '120101-9876543',  # 유효한 주민등록번호
    '210306-0654321',  # 유효한 주민등록번호
    '800801-7654321',  # 유효하지 않은 주민등록번호
    '12345-6789012',   # 유효하지 않은 주민등록번호 (형식 오류)
    '970701-1234567',  # 유효하지 않은 주민등록번호 (뒷부분 첫 자리 오류)
    '123456-1234567',  # 유효하지 않은 주민등록번호 (앞부분 연도 오류)
    '991314-1234567',  # 유효하지 않은 주민등록번호 (앞부분 월 오류)
    '010532-1234567',  # 유효하지 않은 주민등록번호 (앞부분 일 오류)
    '001101-1234567',  # 유효하지 않은 주민등록번호 (앞부분 연도, 월 오류)
    '120106-1234567',  # 유효하지 않은 주민등록번호 (앞부분 일 오류)
    '123412-1234567',  # 유효하지 않은 주민등록번호 (앞부분 월 오류)
    '111231-1234567',  # 유효하지 않은 주민등록번호 (뒷부분 첫 자리 오류)
    '9001011234567',   # 유효하지 않은 주민등록번호 (구분 기호 누락)
]

# 각 주민등록번호에 대해 패턴 검사를 수행합니다.
for jumin in sample_jumin_numbers:
    if re.search(jumin_pattern, jumin):
        print(f"{jumin}는 유효한 주민등록번호입니다.")
    else:
        print(f"{jumin}는 유효하지 않은 주민등록번호입니다.")